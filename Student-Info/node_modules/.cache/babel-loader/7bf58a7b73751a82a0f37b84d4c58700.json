{"ast":null,"code":"import _toConsumableArray from \"/home/monirzzaman/Documents/react-redux-studentInfo-withsaga/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { NAME_CHANGE, EMAIL_CHANGE, ADD_ITEM, DELETE_ITEM, GET_INIT_DATA } from './actionTypes';\nvar defaultState = {\n  name: '',\n  email: '',\n  list: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === NAME_CHANGE) {\n    var newState = JSON.parse(JSON.stringify(state));\n    newState.name = action.value;\n    return newState;\n  } else if (action.type === EMAIL_CHANGE) {\n    var _newState = JSON.parse(JSON.stringify(state));\n\n    _newState.email = action.value;\n    return _newState;\n  } else if (action.type === ADD_ITEM) {\n    var _newState2 = JSON.parse(JSON.stringify(state));\n\n    _newState2.list = [].concat(_toConsumableArray(state.list), [[state.name, state.email]]);\n    _newState2.name = '';\n    _newState2.email = '';\n    return _newState2;\n  } else if (action.type === DELETE_ITEM) {\n    var _newState3 = JSON.parse(JSON.stringify(state));\n\n    _newState3.list.splice(action.index, 1);\n\n    return _newState3;\n  } else if (action.type === GET_INIT_DATA) {\n    var _newState4 = JSON.parse(JSON.stringify(state));\n\n    _newState4.list = action.value;\n    return _newState4;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/home/monirzzaman/Documents/react-redux-studentInfo-withsaga/src/store/reducer.js"],"names":["NAME_CHANGE","EMAIL_CHANGE","ADD_ITEM","DELETE_ITEM","GET_INIT_DATA","defaultState","name","email","list","state","action","type","newState","JSON","parse","stringify","value","splice","index"],"mappings":";AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,aALF,QAOO,eAPP;AAUA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/C,MAAIA,MAAM,CAACC,IAAP,KAAgBX,WAApB,EAAiC;AAC/B,QAAMY,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;AACAG,IAAAA,QAAQ,CAACN,IAAT,GAAgBI,MAAM,CAACM,KAAvB;AACA,WAAOJ,QAAP;AACD,GAJD,MAIO,IAAIF,MAAM,CAACC,IAAP,KAAgBV,YAApB,EAAkC;AACvC,QAAMW,SAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;;AACAG,IAAAA,SAAQ,CAACL,KAAT,GAAiBG,MAAM,CAACM,KAAxB;AACA,WAAOJ,SAAP;AACD,GAJM,MAIA,IAAIF,MAAM,CAACC,IAAP,KAAgBT,QAApB,EAA8B;AACnC,QAAMU,UAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;;AACAG,IAAAA,UAAQ,CAACJ,IAAT,gCAAoBC,KAAK,CAACD,IAA1B,IAAgC,CAACC,KAAK,CAACH,IAAP,EAAaG,KAAK,CAACF,KAAnB,CAAhC;AACAK,IAAAA,UAAQ,CAACN,IAAT,GAAgB,EAAhB;AACAM,IAAAA,UAAQ,CAACL,KAAT,GAAiB,EAAjB;AACA,WAAOK,UAAP;AACD,GANM,MAMA,IAAIF,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AACtC,QAAMS,UAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;;AACAG,IAAAA,UAAQ,CAACJ,IAAT,CAAcS,MAAd,CAAqBP,MAAM,CAACQ,KAA5B,EAAmC,CAAnC;;AACA,WAAON,UAAP;AACD,GAJM,MAIA,IAAIF,MAAM,CAACC,IAAP,KAAgBP,aAApB,EAAmC;AACxC,QAAMQ,UAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;;AACAG,IAAAA,UAAQ,CAACJ,IAAT,GAAgBE,MAAM,CAACM,KAAvB;AACA,WAAOJ,UAAP;AACD;;AAGD,SAAOH,KAAP;AACD,CA3BD","sourcesContent":["import {\n  NAME_CHANGE,\n  EMAIL_CHANGE,\n  ADD_ITEM,\n  DELETE_ITEM,\n  GET_INIT_DATA\n\n} from './actionTypes'\n\n\nconst defaultState = {\n  name: '',\n  email: '',\n  list: []\n}\n\nexport default (state = defaultState, action) => {\n  if (action.type === NAME_CHANGE) {\n    const newState = JSON.parse(JSON.stringify(state))\n    newState.name = action.value\n    return newState\n  } else if (action.type === EMAIL_CHANGE) {\n    const newState = JSON.parse(JSON.stringify(state))\n    newState.email = action.value\n    return newState\n  } else if (action.type === ADD_ITEM) {\n    const newState = JSON.parse(JSON.stringify(state))\n    newState.list = [...state.list, [state.name, state.email]]\n    newState.name = ''\n    newState.email = ''\n    return newState\n  } else if (action.type === DELETE_ITEM) {\n    const newState = JSON.parse(JSON.stringify(state))\n    newState.list.splice(action.index, 1)\n    return newState\n  } else if (action.type === GET_INIT_DATA) {\n    const newState = JSON.parse(JSON.stringify(state))\n    newState.list = action.value\n    return newState\n  }\n\n\n  return state\n}"]},"metadata":{},"sourceType":"module"}